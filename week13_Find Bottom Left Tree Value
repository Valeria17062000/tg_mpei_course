https://leetcode.com/problems/find-bottom-left-tree-value/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        if(!root) return 0;
        queue<TreeNode*> q;
        int count = 0;
        int result;
        q.push(root);
        while(q.size()) {
            int n=q.size();
            for(int i=0;i<n;i++) {
                TreeNode *p=q.front();
                q.pop();
                if(i==0) result = p->val;
                if(p->left) q.push(p->left);
                if(p->right) q.push(p->right);
            }
            count++;
        }
        return result;
    }
};
