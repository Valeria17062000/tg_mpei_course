https://leetcode.com/problems/redundant-connection/

class Solution {
public:
    vector<int> findRedundantConnection(vector<vector<int>>& edges) {
        int s = edges.size();
        vector<int> res;
        if(s==0)
            return res;
        vector<int> v(s+1, 0);
        for(int i =0 ; i < s; i++){
           v[i]=i;
        }
       
        for(auto& e : edges){
            if(!check(v, e[0], e[1])){
                res.push_back(e[0]);
                res.push_back(e[1]);
                break;
            }
        }
        return res;
    }
private:
    int root(vector<int>& v, int i){
        while(v[i] != i){
            i = v[i];
        }
        return v[i];
    }
    
    bool check(vector<int>& v, int i, int j){
        if(root(v, i) == root(v, j))
            return false;
        else{
            v[root(v, i)] = root(v, j);
        }
        return true;
    }
    
};
