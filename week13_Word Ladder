https://leetcode.com/problems/word-ladder/

class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
       
        set<string> list(wordList.begin(), wordList.end());
        
        if (!list.count(endWord))
            return 0;
        
         queue<pair<string, int>> q;
        
        q.push({beginWord, 0});
        list.erase(beginWord);
        
        while (!q.empty()) {
            string cur = q.front().first;
            int count  = q.front().second;
            q.pop();
            
            if (cur == endWord)
                return count + 1;
            
            for (int i = 0; i < cur.size(); i++) {
                string tmp = cur;
                for (int j = 0; j < 26; j++) {
                    tmp[i] = 'a' + j;
                    if (list.count(tmp)!=0) {
                        q.push({tmp, count + 1});
                        list.erase(tmp);
                    }
                }
            }
        }
        
       return 0;
    }
};
