https://leetcode.com/problems/delete-nodes-and-return-forest/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> res;
	TreeNode* dfs(TreeNode* root, set<int>& del){
		if(!root)
            return root;
		root->left=dfs(root->left,del);
		root->right=dfs(root->right,del);
		if(del.find(root->val)!=del.end()){
			if(root->left)
				res.push_back(root->left);
			if(root->right)
				res.push_back(root->right);
			return NULL;
		}
               

		else 
            return root;
	}
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
        set<int> del(to_delete.begin(), to_delete.end());
        dfs(root,del);
        if (del.find(root->val)==del.end())
                    res.push_back(root);
        return res;
    }
    
};
